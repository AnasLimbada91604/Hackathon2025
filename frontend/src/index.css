@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom classes for interactivity matching original monolith logic */
.room-label {
    /* Base styling inherited from Tailwind classes in Canvas.jsx */
    z-index: 10;
}

.furniture-rect {
    /* Custom fill/stroke for non-selected state, others handled by inline props */
    transition: fill 0.2s ease-in-out, stroke 0.2s ease-in-out;
}
.furniture-rect.selected {
    /* Handled by inline props in React, but kept for clarity */
}

/* Ensure global listeners can handle mouse events correctly */
#floor-plan-svg {
    cursor: crosshair;
}

/* Room hover effects */
.room-cell:hover {
    filter: brightness(1.1);
    stroke: rgba(0, 0, 0, 0.2);
    stroke-width: 1;
    transition: all 0.2s ease-in-out;
}

/* Enhanced animations and transitions */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes pulse {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
}

@keyframes shimmer {
    0% {
        background-position: -200px 0;
    }
    100% {
        background-position: calc(200px + 100%) 0;
    }
}

/* Apply animations */
.animate-fade-in-up {
    animation: fadeInUp 0.6s ease-out;
}

.animate-slide-in-right {
    animation: slideInRight 0.4s ease-out;
}

.animate-pulse-slow {
    animation: pulse 2s ease-in-out infinite;
}

/* Button hover effects */
button {
    transition: all 0.2s ease-in-out;
}

button:hover {
    transform: translateY(-1px);
}

button:active {
    transform: translateY(0);
}

/* Loading shimmer effect */
.shimmer {
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200px 100%;
    animation: shimmer 1.5s infinite;
}

/* Enhanced focus states */
input:focus, button:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
}

/* Smooth transitions for all interactive elements */
* {
    transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}